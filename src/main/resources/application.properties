spring.application.name=java_ecom
server.port=8080

# H2 DB Config
#spring.datasource.url=jdbc:h2:mem:ecom
#spring.datasource.username=sa
#spring.datasource.password=password
#spring.datasource.driver-class-name=org.h2.Driver
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.h2.console.enabled=true

# MySQL DB Config
spring.datasource.url=${ECOM_DB_URL}
spring.datasource.username=${ECOM_DB_USERNAME}
spring.datasource.password=${ECOM_DB_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# Data Migration Tool Config - Flyway (Schema Versioning)
spring.flyway.url=${ECOM_DB_URL}
spring.flyway.user=${ECOM_DB_USERNAME}
spring.flyway.password=${ECOM_DB_PASSWORD}
spring.flyway.locations=classpath:db/migration
spring.flyway.enabled=false

# enabling debug log
logging.level.org.springframework.data.elasticsearch=trace

# base url of the application (public)
app.base-url=${ECOM_APP_BASE_URL}

# Stripe Payment Gateway
stripe.api.secret-key=${STRIPE_TEST_SECRET_KEY}
stripe.payment.redirect-url=${app.base-url}/api/payment/confirmation?session_id={CHECKOUT_SESSION_ID}

# Razorpay Payment Gateway
razorpay.api.key-id=${RAZORPAY_TEST_KEY_ID}
razorpay.api.key-secret=${RAZORPAY_TEST_KEY_SECRET}
razorpay.payment.redirect-url=${app.base-url}/api/webhook/razorpay/payment/confirmation

# Ecom Auth Service Host
ecom.auth-service.url=${AUTH_SERVICE_URL}

# Spring Kafka Client
spring.kafka.bootstrap-servers=${KAFKA_SERVER}
# Producer Settings
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
# Consumer Settings
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.group-id=order-service
spring.kafka.consumer.properties.spring.json.trusted.packages=com.project.ecom.kafka.events
# Topics
kafka.topic.order-created=order-created-events
kafka.topic.order-placed=order-placed-events

# Logback Config
#logging.level.root=INFO
